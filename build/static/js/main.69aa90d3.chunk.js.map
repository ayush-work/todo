{"version":3,"sources":["components/todo/Todo.js","components/todoList/TodoList.js","components/todoInput/TodoInput.js","App.js","index.js"],"names":["Todo","text","curDate","handleComplete","editTodo","id","handleEdit","className","onClick","TodoList","allTasks","clearAll","useState","map","task","idx","type","style","marginTop","TodoInput","handleChange","handleSubmit","editItem","onSubmit","e","required","value","placeholder","onChange","App","setAllTasks","setEditItem","setText","date","Date","updatedTasks","moment","format","uuidv4","complete","edit","target","preventDefault","filteredItems","filter","selectedItem","find","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iMAsBeA,EApBF,SAAC,GAAiE,IAA/DC,EAA8D,EAA9DA,KAAMC,EAAwD,EAAxDA,QAAmBC,GAAqC,EAA/CC,SAA+C,EAArCD,gBAAgBE,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,WAC3D,OACE,mCACE,sBAAKC,UAAU,YAAf,UACE,sBAAKA,UAAU,YAAf,UACE,6BAAKN,IACL,6BAAKC,OAEP,sBAAKK,UAAU,eAAf,UACE,mBACEA,UAAU,2BACVC,QAAS,kBAAML,EAAeE,MAEhC,mBAAGE,UAAU,mBAAmBC,QAAS,kBAAMF,EAAWD,eCkBrDI,EA9BE,SAAC,GAAwD,IAAtDC,EAAqD,EAArDA,SAAUC,EAA2C,EAA3CA,SAAUR,EAAiC,EAAjCA,eAAgBG,EAAiB,EAAjBA,WAAiB,EAC/CM,oBAAS,GADsC,6BAGvE,OACE,qCACE,2CACA,qBAAKL,UAAU,eAAf,SACGG,EAASG,KAAI,SAACC,EAAMC,GACnB,OACE,cAAC,EAAD,2BAEMD,GAFN,IAGEX,eAAgBA,EAChBG,WAAYA,IAHPS,QAQb,wBACER,UAAU,MACVS,KAAK,SACLR,QAASG,EACTM,MAAO,CAAEC,UAAW,OAJtB,2BCOSC,EAzBG,SAAC,GAAoD,IAAlDlB,EAAiD,EAAjDA,KAAMmB,EAA2C,EAA3CA,aAAcC,EAA6B,EAA7BA,aAAcC,EAAe,EAAfA,SACrD,OACE,qBAAKf,UAAU,YAAf,SACE,uBACEgB,SAAU,SAACC,GACTH,EAAaG,IAFjB,UAKE,uBACEC,UAAQ,EACRC,MAAOzB,EACPe,KAAK,OACLW,YAAY,aACZC,SAAU,SAACJ,GACTJ,EAAaI,MAGjB,wBAAQR,KAAK,SAAST,UAAS,cAASe,EAAW,SAAW,IAA9D,mBACMA,EAAW,cAAgB,oB,wBCmD1BO,MAnEf,WAAgB,IAAD,EACmBjB,mBAAS,IAD5B,mBACNF,EADM,KACIoB,EADJ,OAEmBlB,oBAAS,GAF5B,mBAENU,EAFM,KAEIS,EAFJ,OAGWnB,mBAAS,IAHpB,mBAGNX,EAHM,KAGA+B,EAHA,KAIPC,EAAO,IAAIC,KAUXC,EAAY,CAPF,CACdlC,OACAC,QAJckC,IAAOH,GAAMI,OAAO,qBAKlChC,GAJSiC,cAKTC,UAAU,EACVC,KAAMlB,IAEU,mBAAgBZ,IA2BlC,OACE,sBAAKH,UAAU,MAAf,UACE,sCACA,cAAC,EAAD,CACEe,SAAUA,EACVrB,KAAMA,EACNmB,aA/Be,SAACI,GACpBQ,EAAQR,EAAEiB,OAAOf,QA+BbL,aA7Be,SAACG,GACpBA,EAAEkB,iBACFZ,EAAYK,GACZJ,GAAY,GACZC,EAAQ,OA2BN,cAAC,EAAD,CACEtB,SAAUA,EACVC,SA1BW,WACfmB,EAAY,KA0BR3B,eAxBiB,SAACE,GACtB,IAAMsC,EAAgBjC,EAASkC,QAAO,SAAC9B,GAAD,OAAUA,EAAKT,KAAOA,KAC5DyB,EAAYa,IAuBRrC,WArBa,SAACD,GAClB,IAAMsC,EAAgBjC,EAASkC,QAAO,SAAC9B,GAAD,OAAUA,EAAKT,KAAOA,KACtDwC,EAAenC,EAASoC,MAAK,SAAChC,GAAD,OAAUA,EAAKT,KAAOA,KACzD2B,EAAQa,EAAa5C,MACrB8B,GAAY,GACZD,EAAYa,MAkBV,kTAI8D,IAC5D,qEC7DRI,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.69aa90d3.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Todo = ({ text, curDate, editTodo, handleComplete, id, handleEdit }) => {\r\n  return (\r\n    <>\r\n      <div className=\"todo-body\">\r\n        <div className=\"todo-text\">\r\n          <h1>{text}</h1>\r\n          <h2>{curDate}</h2>\r\n        </div>\r\n        <div className=\"todo-actions\">\r\n          <i\r\n            className=\"bx bx-check-circle bx-md\"\r\n            onClick={() => handleComplete(id)}\r\n          ></i>\r\n          <i className=\"bx bx-edit bx-md\" onClick={() => handleEdit(id)}></i>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Todo from \"../todo/Todo\";\r\n\r\nconst TodoList = ({ allTasks, clearAll, handleComplete, handleEdit }) => {\r\n  const [edit, setEdit] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <h2>TODO LIST</h2>\r\n      <div className=\"todo-wrapper\">\r\n        {allTasks.map((task, idx) => {\r\n          return (\r\n            <Todo\r\n              key={idx}\r\n              {...task}\r\n              handleComplete={handleComplete}\r\n              handleEdit={handleEdit}\r\n            ></Todo>\r\n          );\r\n        })}\r\n      </div>\r\n      <button\r\n        className=\"btn\"\r\n        type=\"button\"\r\n        onClick={clearAll}\r\n        style={{ marginTop: \"1em\" }}\r\n      >\r\n        Clear All\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nconst TodoInput = ({ text, handleChange, handleSubmit, editItem }) => {\r\n  return (\r\n    <div className=\"todo-form\">\r\n      <form\r\n        onSubmit={(e) => {\r\n          handleSubmit(e);\r\n        }}\r\n      >\r\n        <input\r\n          required\r\n          value={text}\r\n          type=\"text\"\r\n          placeholder=\"Add a task\"\r\n          onChange={(e) => {\r\n            handleChange(e);\r\n          }}\r\n        />\r\n        <button type=\"submit\" className={`btn ${editItem ? \"update\" : \"\"}`}>\r\n          {`${editItem ? \"Update task\" : \"Add Task\"}`}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoInput;\r\n","import TodoList from \"./components/todoList/TodoList\";\nimport TodoInput from \"./components/todoInput/TodoInput\";\nimport { useState, useEffect } from \"react\";\nimport moment from \"moment\";\nimport { v4 as uuidv4 } from \"uuid\";\nfunction App() {\n  const [allTasks, setAllTasks] = useState([]);\n  const [editItem, setEditItem] = useState(false);\n  const [text, setText] = useState(\"\");\n  const date = new Date();\n  const curDate = moment(date).format(\"MMM Do YY, h:mm a\");\n  const id = uuidv4();\n  const newTodo = {\n    text,\n    curDate,\n    id,\n    complete: false,\n    edit: editItem,\n  };\n  const updatedTasks = [newTodo, ...allTasks];\n\n  const handleChange = (e) => {\n    setText(e.target.value);\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setAllTasks(updatedTasks);\n    setEditItem(false);\n    setText(\"\");\n  };\n\n  const clearAll = () => {\n    setAllTasks([]);\n  };\n  const handleComplete = (id) => {\n    const filteredItems = allTasks.filter((task) => task.id !== id);\n    setAllTasks(filteredItems);\n  };\n  const handleEdit = (id) => {\n    const filteredItems = allTasks.filter((task) => task.id !== id);\n    const selectedItem = allTasks.find((task) => task.id === id);\n    setText(selectedItem.text);\n    setEditItem(true);\n    setAllTasks(filteredItems);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>TODO</h1>\n      <TodoInput\n        editItem={editItem}\n        text={text}\n        handleChange={handleChange}\n        handleSubmit={handleSubmit}\n      ></TodoInput>\n      <TodoList\n        allTasks={allTasks}\n        clearAll={clearAll}\n        handleComplete={handleComplete}\n        handleEdit={handleEdit}\n      ></TodoList>\n      <footer>\n        This project is a dummy example project which uses simple react hooks\n        like useState and useEffect. This project shows the cons of not using\n        context API or any another state managers as it contains lot of prop\n        drilling(passing down data as props to another components).{\" \"}\n        <strong>UI is not responsive -_-</strong>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}